{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["'use strict';\n\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport imageErrUrl from '../img/err.svg';\n\nconst inputDate = document.querySelector('#datetime-picker');\nconst outputFields = document.querySelectorAll('.timer .field .value');\n// or each field separeted: // const daysField = document.querySelector('[data-days]');\nconst startTimerBtn = document.querySelector('button');\n// startTimerBtn.disabled = true; - but it's better to disable btn in html\n\nlet intervalId = null;\nlet userSelectedDate;\nlet timeLeft;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate - Date.now() > 0) {\n      startTimerBtn.disabled = false;\n    } else {\n      startTimerBtn.disabled = true;\n      iziToast.error({\n        position: 'topRight',\n        theme: 'dark',\n        messageColor: 'white',\n        iconUrl: imageErrUrl,\n        color: '#ef4040',\n        message: 'Please choose a date in the future',\n      });\n    }\n  },\n};\nflatpickr(inputDate, options);\n\nstartTimerBtn.addEventListener('click', () => {\n  intervalId = setInterval(() => {\n    setTimeIntoFields();\n  }, 1000);\n  startTimerBtn.disabled = true;\n  inputDate.disabled = true;\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor((ms % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction setTimeIntoFields() {\n  timeLeft = userSelectedDate - Date.now();\n  if (timeLeft > 1) {\n    timeLeft = convertMs(timeLeft);\n    outputFields.forEach(field => {\n      field.innerHTML = `${addLeadingZero(\n        timeLeft[Object.getOwnPropertyNames(field.dataset)]\n      )}`;\n    });\n    // if each field    // daysField.innerHTML = `${addLeadingZero(timeLeft.days)}`;\n  } else {\n    clearInterval(intervalId);\n    inputDate.disabled = false;\n  }\n}\n"],"names":["inputDate","outputFields","startTimerBtn","intervalId","userSelectedDate","timeLeft","options","selectedDates","iziToast","imageErrUrl","flatpickr","setTimeIntoFields","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","field"],"mappings":"oGAUA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAe,SAAS,iBAAiB,sBAAsB,EAE/DC,EAAgB,SAAS,cAAc,QAAQ,EAGrD,IAAIC,EAAa,KACbC,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAC9BH,EAAmB,KAAK,IAAG,EAAK,EAClCF,EAAc,SAAW,IAEzBA,EAAc,SAAW,GACzBM,EAAS,MAAM,CACb,SAAU,WACV,MAAO,OACP,aAAc,QACd,QAASC,EACT,MAAO,UACP,QAAS,oCACjB,CAAO,EAEJ,CACH,EACAC,EAAUV,EAAWM,CAAO,EAE5BJ,EAAc,iBAAiB,QAAS,IAAM,CAC5CC,EAAa,YAAY,IAAM,CAC7BQ,GACD,EAAE,GAAI,EACPT,EAAc,SAAW,GACzBF,EAAU,SAAW,EACvB,CAAC,EAED,SAASY,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAOH,EAAK,KAAQ,GAAM,EAEzCI,EAAU,KAAK,MAAOJ,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,SAASR,GAAoB,CAC3BN,EAAWD,EAAmB,KAAK,MAC/BC,EAAW,GACbA,EAAWO,EAAUP,CAAQ,EAC7BJ,EAAa,QAAQmB,GAAS,CAC5BA,EAAM,UAAY,GAAGF,EACnBb,EAAS,OAAO,oBAAoBe,EAAM,OAAO,CAAC,CACnD,CAAA,EACP,CAAK,IAGD,cAAcjB,CAAU,EACxBH,EAAU,SAAW,GAEzB"}